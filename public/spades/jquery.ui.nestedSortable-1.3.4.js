minispade.register('jquery.ui.nestedSortable', "(function() {/*\n * jQuery UI Nested Sortable\n * v 1.3.4 / 28 apr 2011\n * http://mjsarfatti.com/sandbox/nestedSortable\n *\n * Depends:\n *\t jquery.ui.sortable.js 1.8+\n *\n * License CC BY-SA 3.0\n * Copyright 2010-2011, Manuele J Sarfatti\n */\n \n(function($) {\n\n\t$.widget(\"ui.nestedSortable\", $.extend({}, $.ui.sortable.prototype, {\n\n\t\toptions: {\n\t\t\ttabSize: 20,\n\t\t\tdisableNesting: 'ui-nestedSortable-no-nesting',\n\t\t\terrorClass: 'ui-nestedSortable-error',\n\t\t\tlistType: 'ol',\n\t\t\tmaxLevels: 0,\n\t\t\tnoJumpFix: 0\n\t\t},\n\n\t\t_create: function(){\n\t\t\tif (this.noJumpFix == false)\n\t\t\t\tthis.element.height(this.element.height());\n\t\t\tthis.element.data('sortable', this.element.data('nestedSortable'));\n\t\t\treturn $.ui.sortable.prototype._create.apply(this, arguments);\n\t\t},\n\n\n\n\t\t_mouseDrag: function(event) {\n\n\t\t\t//Compute the helpers position\n\t\t\tthis.position = this._generatePosition(event);\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\tif (!this.lastPositionAbs) {\n\t\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\t}\n\n\t\t\t//Do scrolling\n\t\t\tif(this.options.scroll) {\n\t\t\t\tvar o = this.options, scrolled = false;\n\t\t\t\tif(this.scrollParent[0] != document && this.scrollParent[0].tagName != 'HTML') {\n\n\t\t\t\t\tif((this.overflowOffset.top + this.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity)\n\t\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop + o.scrollSpeed;\n\t\t\t\t\telse if(event.pageY - this.overflowOffset.top < o.scrollSensitivity)\n\t\t\t\t\t\tthis.scrollParent[0].scrollTop = scrolled = this.scrollParent[0].scrollTop - o.scrollSpeed;\n\n\t\t\t\t\tif((this.overflowOffset.left + this.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity)\n\t\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft + o.scrollSpeed;\n\t\t\t\t\telse if(event.pageX - this.overflowOffset.left < o.scrollSensitivity)\n\t\t\t\t\t\tthis.scrollParent[0].scrollLeft = scrolled = this.scrollParent[0].scrollLeft - o.scrollSpeed;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif(event.pageY - $(document).scrollTop() < o.scrollSensitivity)\n\t\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\n\t\t\t\t\telse if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity)\n\t\t\t\t\t\tscrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\n\n\t\t\t\t\tif(event.pageX - $(document).scrollLeft() < o.scrollSensitivity)\n\t\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\n\t\t\t\t\telse if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity)\n\t\t\t\t\t\tscrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\n\n\t\t\t\t}\n\n\t\t\t\tif(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour)\n\t\t\t\t\t$.ui.ddmanager.prepareOffsets(this, event);\n\t\t\t}\n\n\t\t\t//Regenerate the absolute position used for position checks\n\t\t\tthis.positionAbs = this._convertPositionTo(\"absolute\");\n\n\t\t\t//Set the helper position\n\t\t\tif(!this.options.axis || this.options.axis != \"y\") this.helper[0].style.left = this.position.left+'px';\n\t\t\tif(!this.options.axis || this.options.axis != \"x\") this.helper[0].style.top = this.position.top+'px';\n\n\t\t\t//Rearrange\n\t\t\tfor (var i = this.items.length - 1; i >= 0; i--) {\n\n\t\t\t\t//Cache variables and intersection, continue if no intersection\n\t\t\t\tvar item = this.items[i], itemElement = item.item[0], intersection = this._intersectsWithPointer(item);\n\t\t\t\tif (!intersection) continue;\n\n\t\t\t\tif(itemElement != this.currentItem[0] //cannot intersect with itself\n\t\t\t\t\t&&\tthis.placeholder[intersection == 1 ? \"next\" : \"prev\"]()[0] != itemElement //no useless actions that have been done before\n\t\t\t\t\t&&\t!$.contains(this.placeholder[0], itemElement) //no action if the item moved is the parent of the item checked\n\t\t\t\t\t&& (this.options.type == 'semi-dynamic' ? !$.contains(this.element[0], itemElement) : true)\n\t\t\t\t\t//&& itemElement.parentNode == this.placeholder[0].parentNode // only rearrange items within the same container\n\t\t\t\t) {\n\n\t\t\t\t\tthis.direction = intersection == 1 ? \"down\" : \"up\";\n\n\t\t\t\t\tif (this.options.tolerance == \"pointer\" || this._intersectsWithSides(item)) {\n\t\t\t\t\t\tthis._rearrange(event, item);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Clear emtpy ul's/ol's\n\t\t\t\t\tthis._clearEmpty(itemElement);\n\n\t\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar parentItem = (this.placeholder[0].parentNode.parentNode && $(this.placeholder[0].parentNode.parentNode).closest('.ui-sortable').length) ? $(this.placeholder[0].parentNode.parentNode) : null;\n\t\t\tvar level = this._getLevel(this.placeholder);\n\t\t\tvar childLevels = this._getChildLevels(this.helper);\n\t\t\tvar previousItem = this.placeholder[0].previousSibling ? $(this.placeholder[0].previousSibling) : null;\n\t\t\tif (previousItem != null) {\n\t\t\t\twhile (previousItem[0].nodeName.toLowerCase() != 'li' || previousItem[0] == this.currentItem[0]) {\n\t\t\t\t\tif (previousItem[0].previousSibling) {\n\t\t\t\t\t\tpreviousItem = $(previousItem[0].previousSibling);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpreviousItem = null;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnewList = document.createElement(o.listType);\n\n\t\t\tthis.beyondMaxLevels = 0;\n\n\t\t\t// If the item is moved to the left, send it to its parent level\n\t\t\tif (parentItem != null && this.positionAbs.left < parentItem.offset().left) {\n\t\t\t\tparentItem.after(this.placeholder[0]);\n\t\t\t\tthis._clearEmpty(parentItem[0]);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t}\n\t\t\t// If the item is below another one and is moved to the right, make it a children of it\n\t\t\telse if (previousItem != null && this.positionAbs.left > previousItem.offset().left + o.tabSize) {\n\t\t\t\tthis._isAllowed(previousItem, level+childLevels+1);\n\t\t\t\tif (!previousItem.children(o.listType).length) {\n\t\t\t\t\tpreviousItem[0].appendChild(newList);\n\t\t\t\t}\n\t\t\t\tpreviousItem.children(o.listType)[0].appendChild(this.placeholder[0]);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._isAllowed(parentItem, level+childLevels);\n\t\t\t}\n\n\t\t\t//Post events to containers\n\t\t\tthis._contactContainers(event);\n\n\t\t\t//Interconnect with droppables\n\t\t\tif($.ui.ddmanager) $.ui.ddmanager.drag(this, event);\n\n\t\t\t//Call callbacks\n\t\t\tthis._trigger('sort', event, this._uiHash());\n\n\t\t\tthis.lastPositionAbs = this.positionAbs;\n\t\t\treturn false;\n\n\t\t},\n\n\t\t_mouseStop: function(event, noPropagation) {\n\n\t\t\t// If the item is in a position not allowed, send it back\n\t\t\tif (this.beyondMaxLevels) {\n\t\t\t\tvar parent = this.placeholder.parent().closest(this.options.items);\n\t\t\t\t\n\t\t\t\tfor (var i = this.beyondMaxLevels - 1; i > 0; i--) {\n\t\t\t\t\tparent = parent.parent().closest(this.options.items);\n\t\t\t\t}\n\n\t\t\t\tthis.placeholder.removeClass(this.options.errorClass);\n\t\t\t\tparent.after(this.placeholder);\n\t\t\t\tthis._trigger(\"change\", event, this._uiHash());\n\t\t\t}\n\n\t\t\t$.ui.sortable.prototype._mouseStop.apply(this, arguments);\n\n\t\t},\n\n\t\tserialize: function(o) {\n\n\t\t\tvar items = this._getItemsAsjQuery(o && o.connected);\n\t\t\tvar str = []; o = o || {};\n\n\t\t\t$(items).each(function() {\n\t\t\t\tvar res = ($(o.item || this).attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\tvar pid = ($(o.item || this).parent(o.listType).parent('li').attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\tif(res) str.push((o.key || res[1]+'['+(o.key && o.expression ? res[1] : res[2])+']')+'='+(pid ? (o.key && o.expression ? pid[1] : pid[2]) : 'root'));\n\t\t\t});\n\n\t\t\tif(!str.length && o.key) {\n\t\t\t\tstr.push(o.key + '=');\n\t\t\t}\n\n\t\t\treturn str.join('&');\n\n\t\t},\n\n\t\ttoHierarchy: function(o) {\n\n\t\t\to = o || {};\n\t\t\tvar sDepth = o.startDepthCount || 0;\n\t\t\tvar ret = [];\n\n\t\t\t$(this.element).children('li').each(function() {\n\t\t\t\tvar level = _recursiveItems($(this));\n\t\t\t\tret.push(level);\n\t\t\t});\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveItems(li) {\n\t\t\t\tvar id = ($(li).attr(o.attribute || 'id') || '').match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\tif (id != null) {\n\t\t\t\t\tvar item = {\"id\" : id[2]};\n\t\t\t\t\tif ($(li).children(o.listType).children('li').length > 0) {\n\t\t\t\t\t\titem.children = [];\n\t\t\t\t\t\t$(li).children(o.listType).children('li').each(function () {\n\t\t\t\t\t\t\tvar level = _recursiveItems($(this));\n\t\t\t\t\t\t\titem.children.push(level);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n        },\n\n\t\ttoArray: function(o) {\n\n\t\t\to = o || {};\n\t\t\tvar sDepth = o.startDepthCount || 0;\n\t\t\tvar ret = [];\n\t\t\tvar left = 2;\n\n\t\t\tret.push({\"item_id\": 'root', \"parent_id\": 'none', \"depth\": sDepth, \"left\": '1', \"right\": ($('li', this.element).length + 1) * 2});\n\n\t\t\t$(this.element).children('li').each(function () {\n\t\t\t\tleft = _recursiveArray(this, sDepth + 1, left);\n\t\t\t});\n\n\t\t\tfunction _sortByLeft(a,b) {\n\t\t\t\treturn a['left'] - b['left'];\n\t\t\t}\n\t\t\tret = ret.sort(_sortByLeft);\n\n\t\t\treturn ret;\n\n\t\t\tfunction _recursiveArray(item, depth, left) {\n\n\t\t\t\tright = left + 1;\n\n\t\t\t\tif ($(item).children(o.listType).children('li').length > 0) {\n\t\t\t\t\tdepth ++;\n\t\t\t\t\t$(item).children(o.listType).children('li').each(function () {\n\t\t\t\t\t\tright = _recursiveArray($(this), depth, right);\n\t\t\t\t\t});\n\t\t\t\t\tdepth --;\n\t\t\t\t}\n\n\t\t\t\tid = ($(item).attr(o.attribute || 'id')).match(o.expression || (/(.+)[-=_](.+)/));\n\n\t\t\t\tif (depth === sDepth + 1) pid = 'root';\n\t\t\t\telse {\n\t\t\t\t\tparentItem = ($(item).parent(o.listType).parent('li').attr('id')).match(o.expression || (/(.+)[-=_](.+)/));\n\t\t\t\t\tpid = parentItem[2];\n\t\t\t\t}\n\n\t\t\t\tif (id != null) {\n\t\t\t\t\t\tret.push({\"item_id\": id[2], \"parent_id\": pid, \"depth\": depth, \"left\": left, \"right\": right});\n\t\t\t\t}\n\n\t\t\t\treturn left = right + 1;\n\t\t\t}\n\n\t\t},\n\n\t\t_clear: function(event, noPropagation) {\n\n\t\t\t$.ui.sortable.prototype._clear.apply(this, arguments);\n\n\t\t\t// Clean last empty ul/ol\n\t\t\tfor (var i = this.items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = this.items[i].item[0];\n\t\t\t\tthis._clearEmpty(item);\n\t\t\t}\n\t\t\treturn true;\n\n\t\t},\n\n\t\t_clearEmpty: function(item) {\n\n\t\t\tif (item.children[1] && item.children[1].children.length == 0) {\n\t\t\t\titem.removeChild(item.children[1]);\n\t\t\t}\n\n\t\t},\n\n\t\t_getLevel: function(item) {\n\n\t\t\tvar level = 1;\n\n\t\t\tif (this.options.listType) {\n\t\t\t\t\tvar list = item.closest(this.options.listType);\n\t\t\t\t\twhile (!list.is('.ui-sortable')/* && level < this.options.maxLevels*/) {\n\t\t\t\t\t\t\tlevel++;\n\t\t\t\t\t\t\tlist = list.parent().closest(this.options.listType);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn level;\n\t\t},\n\n\t\t_getChildLevels: function(parent, depth) {\n\t\t\tvar self = this,\n\t\t\t    o = this.options,\n\t\t\t    result = 0;\n\t\t\tdepth = depth || 0;\n\n\t\t\t$(parent).children(o.listType).children(o.items).each(function (index, child) {\n\t\t\t\t\tresult = Math.max(self._getChildLevels(child, depth + 1), result);\n\t\t\t});\n\n\t\t\treturn depth ? result + 1 : result;\n\t\t},\n\n\t\t_isAllowed: function(parentItem, levels) {\n\t\t\tvar o = this.options\n\t\t\t// Are we trying to nest under a no-nest or are we nesting too deep?\n\t\t\tif (parentItem == null || !(parentItem.hasClass(o.disableNesting))) {\n\t\t\t\tif (o.maxLevels < levels && o.maxLevels != 0) {\n\t\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = levels - o.maxLevels;\n\t\t\t\t} else {\n\t\t\t\t\tthis.placeholder.removeClass(o.errorClass);\n\t\t\t\t\tthis.beyondMaxLevels = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.placeholder.addClass(o.errorClass);\n\t\t\t\tif (o.maxLevels < levels && o.maxLevels != 0) {\n\t\t\t\t\tthis.beyondMaxLevels = levels - o.maxLevels;\n\t\t\t\t} else {\n\t\t\t\t\tthis.beyondMaxLevels = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}));\n\n\t$.ui.nestedSortable.prototype.options = $.extend({}, $.ui.sortable.prototype.options, $.ui.nestedSortable.prototype.options);\n})(jQuery);\n\n})();\n//@ sourceURL=jquery.ui.nestedSortable");